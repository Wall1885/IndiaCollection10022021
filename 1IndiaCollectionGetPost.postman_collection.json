{
	"info": {
		"_postman_id": "1d356cbe-b144-4a8e-a571-de8d34f07e8f",
		"name": "1 India Collection - Get and Post",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1 Get Folder",
			"item": [
				{
					"name": "1 Get user details for Janet Weaver",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify response is ok with a Status Code of 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"console.log (\"Hello World....\");\r",
									"\r",
									"let urlvar = pm.variables.get(\"url\");\r",
									"console.log(\"Value for url variable is :\"+urlvar);\r",
									"\r",
									"pm.variables.set(\"name\", \"Steve is the Postman\");\r",
									"console.log(pm.variables.get(\"name\"));\r",
									"\r",
									"let globalVar = pm.globals.get(\"Env\");\r",
									"console.log (globalVar);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 Get List user details from the second screen of users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify first screen list of users is returned with a Status Code of 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"/*console.log (\"Hello World....\");\r",
									"\r",
									"let urlvar = pm.variables.get(\"url\");\r",
									"console.log(\"Value for url variable is :\"+urlvar);\r",
									"\r",
									"pm.variables.set(\"name\", \"Steve is the Postman\");\r",
									"console.log(pm.variables.get(\"name\"));\r",
									"\r",
									"let globalVar = pm.globals.get(\"Env\");\r",
									"console.log (globalVar);*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/users?page=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3 Get List user datials from the first screen of users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify second screen list of users is returned with a Status Code of 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users?page=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4 Search returns error  404 when invalid user id is searched for.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify status code of 404 is received when searching on an invalid user id\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/200",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"200"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2 Post",
			"item": [
				{
					"name": "1 Register Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify response is ok with a Status Code of 201\", \r",
									"function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify response time is less than 400ms\", \r",
									"function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify successful POST request\", \r",
									"function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 Register Email unsuccessful - no password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify response is ok with a Status Code of 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"sydney@fife\"\r\n}"
						},
						"url": {
							"raw": "https://reqres.in/api/register",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 Register Email unsuccessful - no email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify response is ok with a Status Code of 400 as no email presented\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n       \"password\": \"pistol\",\r\n}"
						},
						"url": {
							"raw": "https://reqres.in/api/register",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 Log In - successfull",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Login is successful with a Status Code of 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}"
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Log In -Unsuccessfull",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify response is ok with a Status Code of 400 as no password presented\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"peter@klaven\"\r\n}"
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"/*console.log (\"Hello World....\");",
					"",
					"let urlvar = pm.variables.get(\"url\");",
					"console.log(\"Value for url variable is :\"+urlvar);",
					"",
					"pm.variables.set(\"name\", \"Steve is the Postman\");",
					"console.log(pm.variables.get(\"name\"));",
					"",
					"let globalVar = pm.globals.get(\"Env\");",
					"console.log (globalVar);*/"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://reqres.in"
		}
	]
}